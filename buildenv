MESON_VERSION='1.7.0'

export ZOPEN_STABLE_URL='https://github.com/mesonbuild/meson.git'
export ZOPEN_STABLE_TAG="${MESON_VERSION}"
export ZOPEN_CATEGORIES='development build_system'
export ZOPEN_STABLE_DEPS='ninja check_python'

export ZOPEN_DEV_URL='https://github.com/mesonbuild/meson.git'
export ZOPEN_DEV_DEPS='ninja check_python'

export ZOPEN_BUILD_LINE='STABLE'
export ZOPEN_RUNTIME_DEPS='ninja check_python'

export ZOPEN_CONFIGURE='skip'

export ZOPEN_COMP='skip'

export ZOPEN_MAKE='zopen_build'
export ZOPEN_MAKE_MINIMAL='yes'

if [ -z "$ZOPEN_CHECK" ]; then
    export ZOPEN_CHECK='zopen_check'
fi
export ZOPEN_CHECK_MINIMAL='yes'

export ZOPEN_INSTALL='zopen_install'

zopen_check_results() {
    dir="$1"
    pfx="$2"
    chk="$1/$2_check.log"

    failures="$(grep -E -c "\.\.\. (FAIL|ERROR)$" ${chk})"
    successes="$(grep -E -c "\.\.\. ok$" ${chk})"

    # Echo the following information to gauge build health
    echo "actualFailures:${failures}"
    echo "totalTests:$((failures+successes))"
    echo 'expectedFailures:239'
}

zopen_get_version() {
    echo "${MESON_VERSION}"
}

zopen_build() {
    python -m venv .venv
    . .venv/bin/activate
    pip install setuptools build installer wheel && \
    rm -rf dist && \
    python -m build --wheel
    zopen_build_result="$?"
    deactivate
    return "$zopen_build_result"
}

zopen_check() {
    . .venv/bin/activate
    python run_tests.py
    zopen_check_result="$?"
    deactivate
    return "$zopen_check_result"
}

zopen_install() {
    set -e
    mkdir -p "${ZOPEN_INSTALL_DIR}/lib/"
    cp "dist/meson-${MESON_VERSION}-py3-none-any.whl" "${ZOPEN_INSTALL_DIR}/lib/"
    mkdir -p "${ZOPEN_INSTALL_DIR}/bin/"
    touch "${ZOPEN_INSTALL_DIR}/bin/meson"
    set +e
}

zopen_append_to_setup() {
    echo "python -m pip install --prefix=. 'lib/meson-${MESON_VERSION}-py3-none-any.whl'"
}

zopen_append_to_env() {
    cat <<EOF
PYTHONPATH="\$PYTHONPATH:\$(python -c 'import site; import os; site.PREFIXES=[os.getcwd()]; print(site.getsitepackages()[0])')"
export PYTHONPATH="\$(deleteDuplicateEntries "\$PYTHONPATH" ":")"
EOF
}
