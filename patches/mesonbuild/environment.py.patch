diff --git a/mesonbuild/environment.py b/mesonbuild/environment.py
index c09d7e312..5dad6377b 100644
--- a/mesonbuild/environment.py
+++ b/mesonbuild/environment.py
@@ -363,6 +363,8 @@ def detect_cpu_family(compilers: CompilersDict) -> str:
         trial = detect_windows_arch(compilers)
     elif mesonlib.is_freebsd() or mesonlib.is_netbsd() or mesonlib.is_openbsd() or mesonlib.is_qnx() or mesonlib.is_aix():
         trial = platform.processor().lower()
+    elif mesonlib.is_zos():
+        trial = 's390x'
     else:
         trial = platform.machine().lower()
     if trial.startswith('i') and trial.endswith('86'):
@@ -429,6 +431,8 @@ def detect_cpu(compilers: CompilersDict) -> str:
         trial = detect_windows_arch(compilers)
     elif mesonlib.is_freebsd() or mesonlib.is_netbsd() or mesonlib.is_openbsd() or mesonlib.is_aix():
         trial = platform.processor().lower()
+    elif mesonlib.is_zos():
+        trial = 's390x'
     else:
         trial = platform.machine().lower()
 
@@ -478,6 +482,7 @@ KERNEL_MAPPINGS: T.Mapping[str, str] = {'freebsd': 'freebsd',
                                         'dragonfly': 'dragonfly',
                                         'haiku': 'haiku',
                                         'gnu': 'gnu',
+                                        'zos': 'zos',
                                         }
 
 def detect_kernel(system: str) -> T.Optional[str]:
@@ -508,6 +513,8 @@ def detect_subsystem(system: str) -> T.Optional[str]:
 def detect_system() -> str:
     if sys.platform == 'cygwin':
         return 'cygwin'
+    if sys.platform == 'zos':
+        return 'zos'
     return platform.system().lower()
 
 def detect_msys2_arch() -> T.Optional[str]:
@@ -547,7 +554,8 @@ def machine_info_can_run(machine_info: MachineInfo):
     return \
         (machine_info.cpu_family == true_build_cpu_family) or \
         ((true_build_cpu_family == 'x86_64') and (machine_info.cpu_family == 'x86')) or \
-        ((true_build_cpu_family == 'mips64') and (machine_info.cpu_family == 'mips'))
+        ((true_build_cpu_family == 'mips64') and (machine_info.cpu_family == 'mips')) or \
+        ((true_build_cpu_family == 's390x') and (machine_info.cpu_family == 's390'))
 
 class Environment:
     private_dir = 'meson-private'
@@ -1019,6 +1027,8 @@ class Environment:
                 extra_paths.update(library_paths)
             elif self.machines.host.is_darwin():
                 env.prepend('DYLD_LIBRARY_PATH', list(library_paths))
+            elif self.machines.host.is_zos():
+                env.prepend('LIBPATH', list(library_paths))
             else:
                 env.prepend('LD_LIBRARY_PATH', list(library_paths))
         if extra_paths:
